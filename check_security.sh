#!/bin/bash
echo "üîç AUDITORIA DE SEGURAN√áA DO REPOSIT√ìRIO"
echo "========================================"
echo ""

# Verificar commit atual
echo "‚úì Verificando commit atual (HEAD)..."
if git show HEAD:config.py 2>/dev/null | grep -qE 'os\.getenv\("TELEGRAM_BOT_TOKEN"\)$'; then
    echo "  ‚úÖ config.py atual est√° SEGURO (sem valores padr√£o)"
else
    echo "  ‚ö†Ô∏è config.py pode ter problemas"
fi

# Verificar hist√≥rico
echo ""
echo "‚úì Verificando hist√≥rico de commits..."
SUSPICIOUS_COUNT=0
for commit in $(git log --all --pretty=format:"%H" | head -10); do
    if git show $commit:config.py 2>/dev/null | grep -qE '(8384463381|gsk_BQk4|AAF.*UVGD5)'; then
        echo "  ‚ö†Ô∏è ENCONTRADO em commit: $(git log --oneline -1 $commit)"
        SUSPICIOUS_COUNT=$((SUSPICIOUS_COUNT + 1))
    fi
done

if [ $SUSPICIOUS_COUNT -eq 0 ]; then
    echo "  ‚úÖ Nenhuma credencial encontrada no hist√≥rico"
else
    echo "  ‚ö†Ô∏è ATEN√á√ÉO: $SUSPICIOUS_COUNT commit(s) com credenciais expostas!"
fi

# Verificar .gitignore
echo ""
echo "‚úì Verificando .gitignore..."
if grep -q "^\.env$" .gitignore; then
    echo "  ‚úÖ .env est√° no .gitignore"
else
    echo "  ‚ö†Ô∏è .env N√ÉO est√° no .gitignore"
fi

if grep -q "^\*\.log$" .gitignore; then
    echo "  ‚úÖ *.log est√° no .gitignore"
else
    echo "  ‚ö†Ô∏è *.log N√ÉO est√° no .gitignore"
fi

# Verificar se .env existe e n√£o est√° no git
echo ""
echo "‚úì Verificando arquivos sens√≠veis..."
if [ -f .env ]; then
    if git ls-files --error-unmatch .env 2>/dev/null; then
        echo "  ‚ö†Ô∏è .env est√° sendo rastreado pelo git!"
    else
        echo "  ‚úÖ .env existe mas N√ÉO est√° no git"
    fi
else
    echo "  ‚ÑπÔ∏è  .env n√£o existe localmente (ok para CI/CD)"
fi

# Verificar arquivos rastreados
echo ""
echo "‚úì Verificando arquivos rastreados suspeitos..."
if git ls-files | grep -qE '(\.env$|\.key$|\.secret$|\.token$)'; then
    echo "  ‚ö†Ô∏è Arquivos sens√≠veis encontrados no git:"
    git ls-files | grep -E '(\.env$|\.key$|\.secret$|\.token$)'
else
    echo "  ‚úÖ Nenhum arquivo sens√≠vel rastreado"
fi

echo ""
echo "========================================"
echo "üìä RESULTADO DA AUDITORIA"
echo "========================================"

if [ $SUSPICIOUS_COUNT -eq 0 ]; then
    echo "‚úÖ REPOSIT√ìRIO SEGURO PARA SER P√öBLICO"
    echo ""
    echo "Todas as verifica√ß√µes passaram:"
    echo "  ‚Ä¢ Nenhuma credencial no c√≥digo atual"
    echo "  ‚Ä¢ Nenhuma credencial no hist√≥rico"
    echo "  ‚Ä¢ .gitignore configurado corretamente"
    echo "  ‚Ä¢ Arquivos sens√≠veis n√£o rastreados"
else
    echo "‚ö†Ô∏è ATEN√á√ÉO: CREDENCIAIS ENCONTRADAS NO HIST√ìRICO"
    echo ""
    echo "Recomenda√ß√£o: Limpar hist√≥rico antes de tornar p√∫blico"
    echo "Veja: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository"
fi

